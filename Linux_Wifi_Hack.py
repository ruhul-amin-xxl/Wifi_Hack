# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Thu Aug 28 09:14:31 2025
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))